services:
  travel-request-api:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: travel-request-api
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - travel_request_network

  nginx:
    image: nginx:alpine
    container_name: travel-request-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - travel_request_network

  db:
    image: mysql:8.0
    container_name: travel-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: travel_management
      MYSQL_ROOT_PASSWORD: travel_password
      MYSQL_PASSWORD: travel_password
      MYSQL_USER: travel_user
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - travel_request_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: travel-phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - travel_request_network
    depends_on:
      - db

networks:
  travel_request_network:
    driver: bridge

volumes:
  dbdata: 